# Based on https://www.nginx.com/resources/wiki/start/topics/examples/full/#nginx-conf
user              daemon daemon;  ## Default: nobody

worker_processes  auto;
error_log         "/opt/bitnami/nginx/logs/error.log";
pid               "/opt/bitnami/nginx/tmp/nginx.pid";

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    log_format    main '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for"';
    access_log    "/opt/bitnami/nginx/logs/access.log" main;
    add_header    X-Frame-Options SAMEORIGIN;

    client_body_temp_path  "/opt/bitnami/nginx/tmp/client_body" 1 2;
    proxy_temp_path        "/opt/bitnami/nginx/tmp/proxy" 1 2;
    fastcgi_temp_path      "/opt/bitnami/nginx/tmp/fastcgi" 1 2;
    scgi_temp_path         "/opt/bitnami/nginx/tmp/scgi" 1 2;
    uwsgi_temp_path        "/opt/bitnami/nginx/tmp/uwsgi" 1 2;

    sendfile           on;
    tcp_nopush         on;
    tcp_nodelay        off;
    gzip               on;
    gzip_http_version  1.0;
    gzip_comp_level    2;
    gzip_proxied       any;
    gzip_types         text/plain text/css application/javascript text/xml application/xml+rss;
    keepalive_timeout  65;
    ssl_protocols      TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305;
    client_max_body_size 80M;
    server_tokens off;

    absolute_redirect  on;
    port_in_redirect   on;

    include  "/opt/bitnami/nginx/conf/server_blocks/*.conf";

    # HTTP Server

	server {
		listen 80;
		server_name <ip address or domain name>; # Replace with your server' public IP address or domain name
		
		include  "/opt/bitnami/nginx/conf/bitnami/*.conf";
		
		root /opt/bitnami/nginx/html;  # Replace with the path to your web application
		index index.html index.htm;

		# Location for serving the Leaflet app
		location /leaflet_app {
			# Use alias to map the URI to the actual directory
			alias /opt/bitnami/nginx/html/leaflet_app/;

			# Serve index.html when accessing /leaflet_app
			index index.html;

			# Try to serve the requested file, or fall back to index.html
			try_files $uri $uri/ /leaflet_app/index.html =404;
			
			# Add CORS headers to the Leaflet app as well
			add_header 'Access-Control-Allow-Origin' '*' always;
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
			add_header 'Access-Control-Allow-Headers' 'Origin, Authorization, Accept, Content-Type, X-Requested-With' always;
		
		}
		

		# Location for proxying Geoserver requests
		location /geoserver/ {
			# Proxy pass to the Geoserver backend
			proxy_pass http://10.0.0.6:8080/geoserver/; #internal server name or ip
			# proxy_pass http://xx.xx.146.169:8080/geoserver/;
			
			# Pass headers for correct proxying
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

			# Add CORS headers to allow cross-origin requests
			add_header 'Access-Control-Allow-Origin' '*' always;
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
			add_header 'Access-Control-Allow-Headers' 'Origin, Authorization, Accept, Content-Type, X-Requested-With' always;

			# Handle preflight OPTIONS requests for CORS
			if ($request_method = 'OPTIONS') {
				add_header 'Access-Control-Allow-Origin' '*' always;
				add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
				add_header 'Access-Control-Allow-Headers' 'Origin, Authorization, Accept, Content-Type, X-Requested-With' always;
				add_header 'Content-Length' '0';
				add_header 'Content-Type' 'text/plain charset=UTF-8';
				return 204;
			}
		}
		location /status {
            stub_status on;
            access_log   off;
            allow 127.0.0.1;
            deny all;
        }

		# Set up logging
		access_log /var/log/nginx/myapp_access.log;
		error_log /var/log/nginx/myapp_error.log;
		
	}

}